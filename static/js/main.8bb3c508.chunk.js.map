{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","title","completed","cn","TodoList","todos","map","visibleTodos","userId","usersFromServer","find","usr","Error","App","useState","setTodos","setTitle","setUserId","titleError","settitleError","userError","setuserError","action","method","onSubmit","event","preventDefault","trim","newTodo","Math","max","prevTodos","htmlFor","type","placeholder","value","onChange","newTitle","target","replace","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8bb3c508.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import React from 'react';\nimport { User } from '../../types/User';\n\ninterface Props {\n  user: User;\n}\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const { name, email } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import React from 'react';\nimport cn from 'classnames';\nimport { UserInfo } from '../UserInfo';\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  todo: Todo\n}\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    id,\n    title,\n    completed,\n    user,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={cn('TodoInfo', { 'TodoInfo--completed': completed })}\n    >\n      <h2 className=\"TodoInfo__title\">{title}</h2>\n      <UserInfo user={user} />\n    </article>\n  );\n};\n","import { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ninterface Props {\n  todos: Todo[];\n}\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map((todo) => <TodoInfo key={todo.id} todo={todo} />)}\n    </section>\n  );\n};\n","import './App.scss';\n\nimport { useState } from 'react';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { TodoList } from './components/TodoList';\nimport { User } from './types/User';\nimport { Todo } from './types/Todo';\n\nconst visibleTodos = todosFromServer.map((todo) => {\n  const user = usersFromServer.find((usr: User) => usr.id === todo.userId);\n\n  if (!user) {\n    throw new Error(`User with id ${todo.userId} not found`);\n  }\n\n  return {\n    ...todo,\n    user,\n  };\n});\n\nexport const App = () => {\n  const [todos, setTodos] = useState(visibleTodos);\n  const [title, setTitle] = useState('');\n  const [userId, setUserId] = useState(0);\n  const [titleError, settitleError] = useState(false);\n  const [userError, setuserError] = useState(false);\n\n  const handleTitleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newTitle = event.target.value.replace(/[^a-zA-Z0-9а-яА-Я ]/g, '');\n\n    setTitle(newTitle);\n    settitleError(false);\n  };\n\n  const handleUserIdChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setUserId(+event.target.value);\n    setuserError(false);\n  };\n\n  const setNewTodoId = () => {\n    const maxId = Math.max(...todos.map(todo => todo.id));\n\n    return maxId + 1;\n  };\n\n  const onSubmitHandler = (event: React.FormEvent) => {\n    event.preventDefault();\n    settitleError(!title.trim());\n    setuserError(!userId);\n\n    if (!title.trim() || !userId) {\n      return;\n    }\n\n    const user = usersFromServer.find((usr: User) => usr.id === userId);\n\n    if (!user) {\n      return;\n    }\n\n    const newTodo: Todo = {\n      id: setNewTodoId(),\n      title,\n      userId,\n      user,\n      completed: false,\n    };\n\n    setTodos(prevTodos => [...prevTodos, newTodo]);\n    setTitle('');\n    setUserId(0);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form action=\"/api/todos\" method=\"POST\" onSubmit={onSubmitHandler}>\n        <div className=\"field\">\n          <label htmlFor=\"todo-title\">Title:&nbsp;&nbsp;</label>\n          <input\n            id=\"todo-title\"\n            type=\"text\"\n            data-cy=\"titleInput\"\n            placeholder=\"Enter a title\"\n            value={title}\n            onChange={handleTitleChange}\n          />\n          {\n            titleError\n            && <span className=\"error\">Please enter a title</span>\n          }\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"user-select\">User:&nbsp;&nbsp;</label>\n          <select\n            id=\"user-select\"\n            data-cy=\"userSelect\"\n            value={userId}\n            onChange={handleUserIdChange}\n          >\n            <option value=\"0\" disabled>Choose a user</option>\n\n            {usersFromServer.map((user) => (\n              <option key={user.id} value={user.id}>\n                {user.name}\n              </option>\n            ))}\n\n          </select>\n\n          {\n            userError\n            && <span className=\"error\">Please select a user</span>\n          }\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}